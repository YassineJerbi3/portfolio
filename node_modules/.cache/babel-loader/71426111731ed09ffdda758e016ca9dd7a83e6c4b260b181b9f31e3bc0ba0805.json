{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\portfolio\\\\myportfolio\\\\src\\\\components\\\\Newsletter.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Col, Row, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Newsletter = ({\n  status,\n  message\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [buttonText, setButtonText] = useState(\"Submit\");\n  const [formStatus, setFormStatus] = useState('');\n  const [formMessage, setFormMessage] = useState('');\n  useEffect(() => {\n    if (formStatus === 'success') clearFields();\n  }, [formStatus]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setButtonText(\"Sending...\");\n    setFormStatus('sending'); // Update status to sending\n\n    try {\n      let response = await fetch(\"http://localhost:5000/contact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      let result = await response.json();\n      if (response.ok) {\n        setFormStatus('success');\n        setFormMessage('Message sent successfully');\n      } else {\n        setFormStatus('error');\n        setFormMessage(result.message || 'Something went wrong, please try again later.');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setFormStatus('error');\n      setFormMessage('Network error, please try again later.');\n    } finally {\n      setButtonText(\"Submit\");\n    }\n  };\n  const clearFields = () => {\n    setEmail('');\n  };\n  return /*#__PURE__*/_jsxDEV(Col, {\n    lg: 12,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newsletter-bx wow slideInUp\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          md: 6,\n          xl: 5,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Subscribe to our Newsletter\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 44\n            }, this), \"& Never miss latest updates\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), formStatus === 'sending' && /*#__PURE__*/_jsxDEV(Alert, {\n            children: \"Sending...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 42\n          }, this), formStatus === 'error' && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: formMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 40\n          }, this), formStatus === 'success' && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            children: formMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          xl: 7,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"new-email-bx\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: email,\n                type: \"email\",\n                onChange: e => setEmail(e.target.value),\n                placeholder: \"Email Address\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: buttonText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Newsletter, \"bP0XGDsRD1NW2S7mkBcnfI53uUc=\");\n_c = Newsletter;\nvar _c;\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"names":["useState","useEffect","Col","Row","Alert","jsxDEV","_jsxDEV","Newsletter","status","message","_s","email","setEmail","buttonText","setButtonText","formStatus","setFormStatus","formMessage","setFormMessage","clearFields","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","error","console","lg","children","className","md","xl","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","value","type","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/portfolio/myportfolio/src/components/Newsletter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Col, Row, Alert } from \"react-bootstrap\";\r\n\r\nexport const Newsletter = ({ status, message }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [buttonText, setButtonText] = useState(\"Submit\");\r\n  const [formStatus, setFormStatus] = useState('');\r\n  const [formMessage, setFormMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (formStatus === 'success') clearFields();\r\n  }, [formStatus]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setButtonText(\"Sending...\");\r\n    setFormStatus('sending'); // Update status to sending\r\n\r\n    try {\r\n      let response = await fetch(\"http://localhost:5000/contact\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      let result = await response.json();\r\n      if (response.ok) {\r\n        setFormStatus('success');\r\n        setFormMessage('Message sent successfully');\r\n      } else {\r\n        setFormStatus('error');\r\n        setFormMessage(result.message || 'Something went wrong, please try again later.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setFormStatus('error');\r\n      setFormMessage('Network error, please try again later.');\r\n    } finally {\r\n      setButtonText(\"Submit\");\r\n    }\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setEmail('');\r\n  }\r\n\r\n  return (\r\n    <Col lg={12}>\r\n      <div className=\"newsletter-bx wow slideInUp\">\r\n        <Row>\r\n          <Col lg={12} md={6} xl={5}>\r\n            <h3>Subscribe to our Newsletter<br />& Never miss latest updates</h3>\r\n            {formStatus === 'sending' && <Alert>Sending...</Alert>}\r\n            {formStatus === 'error' && <Alert variant=\"danger\">{formMessage}</Alert>}\r\n            {formStatus === 'success' && <Alert variant=\"success\">{formMessage}</Alert>}\r\n          </Col>\r\n          <Col md={6} xl={7}>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"new-email-bx\">\r\n                <input\r\n                  value={email}\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"Email Address\"\r\n                  required\r\n                />\r\n                <button type=\"submit\">{buttonText}</button>\r\n              </div>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}