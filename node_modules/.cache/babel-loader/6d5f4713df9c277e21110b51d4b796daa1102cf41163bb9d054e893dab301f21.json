{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Col, Row, Alert } from \"react-bootstrap\";\nexport const Newsletter = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [status, setStatus] = useState({\n    success: null,\n    message: ''\n  });\n  const [buttonText, setButtonText] = useState(\"Send\");\n  useEffect(() => {\n    if (status.success) {\n      clearFields();\n    }\n  }, [status]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setButtonText(\"Sending...\");\n    try {\n      let response = await fetch(\"http://localhost:5000/contact\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json;charset=utf-8\"\n        },\n        body: JSON.stringify({\n          firstName: \"\",\n          // Replace with actual data\n          lastName: \"\",\n          // Replace with actual data\n          email: email,\n          message: \"\",\n          // Replace with actual data\n          phone: \"\" // Replace with actual data\n        })\n      });\n      let result = await response.json();\n      console.log('Response:', result); // Log response for debugging\n      if (response.ok) {\n        setStatus({\n          success: true,\n          message: 'Message sent successfully'\n        });\n      } else {\n        setStatus({\n          success: false,\n          message: result.message || 'Something went wrong, please try again later.'\n        });\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setStatus({\n        success: false,\n        message: 'Network error, please try again later.'\n      });\n    } finally {\n      setButtonText(\"Send\");\n      clearFields();\n    }\n  };\n  const clearFields = () => {\n    setEmail('');\n  };\n};\n_s(Newsletter, \"bX0TTh4FzJal9hLp7h5sMSFmhOI=\");\n_c = Newsletter;\nvar _c;\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"names":["useState","useEffect","Col","Row","Alert","Newsletter","_s","email","setEmail","status","setStatus","success","message","buttonText","setButtonText","clearFields","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","firstName","lastName","phone","result","json","console","log","ok","error","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/portfolio/myportfolio/src/components/Newsletter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Col, Row, Alert } from \"react-bootstrap\";\r\n\r\nexport const Newsletter = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [status, setStatus] = useState({ success: null, message: '' });\r\n  const [buttonText, setButtonText] = useState(\"Send\");\r\n\r\n  useEffect(() => {\r\n    if (status.success) {\r\n      clearFields();\r\n    }\r\n  }, [status]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setButtonText(\"Sending...\");\r\n    try {\r\n      let response = await fetch(\"http://localhost:5000/contact\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify({\r\n          firstName: \"\",  // Replace with actual data\r\n          lastName: \"\",   // Replace with actual data\r\n          email: email,\r\n          message: \"\",    // Replace with actual data\r\n          phone: \"\"       // Replace with actual data\r\n        }),\r\n      });\r\n      let result = await response.json();\r\n      console.log('Response:', result);  // Log response for debugging\r\n      if (response.ok) {\r\n        setStatus({ success: true, message: 'Message sent successfully' });\r\n      } else {\r\n        setStatus({ success: false, message: result.message || 'Something went wrong, please try again later.' });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setStatus({ success: false, message: 'Network error, please try again later.' });\r\n    } finally {\r\n      setButtonText(\"Send\");\r\n      clearFields();\r\n    }\r\n  };\r\n  \r\n\r\n  const clearFields = () => {\r\n    setEmail('');\r\n  };\r\n\r\n\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AAEjD,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC;IAAEW,OAAO,EAAE,IAAI;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EACpE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,MAAM,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,CAACE,OAAO,EAAE;MAClBI,WAAW,CAAC,CAAC;IACf;EACF,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,aAAa,CAAC,YAAY,CAAC;IAC3B,IAAI;MACF,IAAIK,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,SAAS,EAAE,EAAE;UAAG;UAChBC,QAAQ,EAAE,EAAE;UAAI;UAChBpB,KAAK,EAAEA,KAAK;UACZK,OAAO,EAAE,EAAE;UAAK;UAChBgB,KAAK,EAAE,EAAE,CAAO;QAClB,CAAC;MACH,CAAC,CAAC;MACF,IAAIC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,MAAM,CAAC,CAAC,CAAE;MACnC,IAAIV,QAAQ,CAACc,EAAE,EAAE;QACfvB,SAAS,CAAC;UAAEC,OAAO,EAAE,IAAI;UAAEC,OAAO,EAAE;QAA4B,CAAC,CAAC;MACpE,CAAC,MAAM;QACLF,SAAS,CAAC;UAAEC,OAAO,EAAE,KAAK;UAAEC,OAAO,EAAEiB,MAAM,CAACjB,OAAO,IAAI;QAAgD,CAAC,CAAC;MAC3G;IACF,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BxB,SAAS,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAyC,CAAC,CAAC;IAClF,CAAC,SAAS;MACRE,aAAa,CAAC,MAAM,CAAC;MACrBC,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAGD,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACxBP,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;AAGH,CAAC;AAACF,EAAA,CAlDWD,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}